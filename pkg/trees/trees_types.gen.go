// Package trees provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package trees

import (
	"time"
)

const (
	JWTAuthScopes = "JWTAuth.Scopes"
)

// Defines values for GetDicoTableParamsTable.
const (
	Check            GetDicoTableParamsTable = "check"
	Entourage        GetDicoTableParamsTable = "entourage"
	EtatSanitaire    GetDicoTableParamsTable = "etat_sanitaire"
	EtatSanitaireRem GetDicoTableParamsTable = "etat_sanitaire_rem"
	Note             GetDicoTableParamsTable = "note"
	RevSurface       GetDicoTableParamsTable = "rev_surface"
	ToBeChecked      GetDicoTableParamsTable = "to_be_checked"
	Validation       GetDicoTableParamsTable = "validation"
)

// Center defines model for Center.
type Center struct {
	Geometry string `json:"geometry"`
}

// Dico defines model for Dico.
type Dico struct {
	Id       int32   `json:"id"`
	Subtitle *string `json:"subtitle,omitempty"`
	Value    string  `json:"value"`
}

// EmplacementCentroid defines model for EmplacementCentroid.
type EmplacementCentroid struct {
	Geometry string  `json:"geometry"`
	Surface  float32 `json:"surface"`
}

// Error defines model for Error.
type Error struct {
	Code    int32  `json:"code"`
	Message string `json:"message"`
}

// Tree defines model for Tree.
type Tree struct {
	Comment              *string        `json:"comment,omitempty"`
	CreateTime           time.Time      `json:"create_time"`
	Creator              int32          `json:"creator"`
	Description          *string        `json:"description,omitempty"`
	ExternalId           *int32         `json:"external_id,omitempty"`
	Geom                 string         `json:"geom"`
	Id                   int32          `json:"id"`
	IdValidator          *int32         `json:"id_validator,omitempty"`
	InactivationReason   *string        `json:"inactivation_reason,omitempty"`
	InactivationTime     *time.Time     `json:"inactivation_time,omitempty"`
	IsActive             bool           `json:"is_active"`
	IsValidated          *bool          `json:"is_validated,omitempty"`
	LastModificationTime *time.Time     `json:"last_modification_time,omitempty"`
	LastModificationUser *int32         `json:"last_modification_user,omitempty"`
	Name                 string         `json:"name"`
	TreeAttributes       TreeAttributes `json:"tree_attributes"`
}

// TreeAttLight defines model for TreeAttLight.
type TreeAttLight struct {
	Idvalidation int32 `json:"idvalidation"`
	Ispublic     bool  `json:"ispublic"`
}

// TreeAttributes defines model for TreeAttributes.
type TreeAttributes struct {
	Circonference           *int32  `json:"circonference,omitempty"`
	Entouragerem            *string `json:"entouragerem,omitempty"`
	Envracinairerem         *string `json:"envracinairerem,omitempty"`
	Etatsanitairerem        *string `json:"etatsanitairerem,omitempty"`
	Idchkentourage          *int32  `json:"idchkentourage,omitempty"`
	Idchkrevsurface         *int32  `json:"idchkrevsurface,omitempty"`
	Identourage             *int32  `json:"identourage,omitempty"`
	Idetatsanitairecouronne *int32  `json:"idetatsanitairecouronne,omitempty"`
	Idetatsanitairepied     *int32  `json:"idetatsanitairepied,omitempty"`
	Idetatsanitairetronc    *int32  `json:"idetatsanitairetronc,omitempty"`
	Idnote                  *int32  `json:"idnote,omitempty"`
	Idrevsurface            *int32  `json:"idrevsurface,omitempty"`
	Idthing                 int32   `json:"idthing"`
	Idtobechecked           *int32  `json:"idtobechecked,omitempty"`
	Idvalidation            int32   `json:"idvalidation"`
	Ispublic                bool    `json:"ispublic"`
	Revsurfacerem           *string `json:"revsurfacerem,omitempty"`
}

// TreeDico defines model for TreeDico.
type TreeDico struct {
	Id        int32  `json:"id"`
	IsActive  *bool  `json:"is_active,omitempty"`
	SortOrder *int32 `json:"sort_order,omitempty"`
	Value     string `json:"value"`
}

// TreeList defines model for TreeList.
type TreeList struct {
	CreateTime   time.Time    `json:"create_time"`
	Creator      int32        `json:"creator"`
	Description  *string      `json:"description,omitempty"`
	ExternalId   *int32       `json:"external_id,omitempty"`
	Geom         string       `json:"geom"`
	Id           int32        `json:"id"`
	IsActive     bool         `json:"is_active"`
	IsValidated  *bool        `json:"is_validated,omitempty"`
	Name         string       `json:"name"`
	TreeAttLight TreeAttLight `json:"tree_att_light"`
}

// GetDicoTableParamsTable defines parameters for GetDicoTable.
type GetDicoTableParamsTable string

// ListParams defines parameters for List.
type ListParams struct {
	// Limit maximum number of results to return
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset number of rows to skip before beginning to return rows
	Offset *int32 `form:"offset,omitempty" json:"offset,omitempty"`
}

// CreateJSONRequestBody defines body for Create for application/json ContentType.
type CreateJSONRequestBody = Tree

// UpdateFormdataRequestBody defines body for Update for application/x-www-form-urlencoded ContentType.
type UpdateFormdataRequestBody = Tree
